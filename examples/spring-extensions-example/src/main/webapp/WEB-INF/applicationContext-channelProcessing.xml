<?xml version="1.0" encoding="UTF-8"?>
<!-- 
author		: Jeevanandam (jeeva@myjeeva.com)
desc		: sample application for configuring/integrate spring-extensions library with application
filename	: applicationContext-channelProcessing.xml

The MIT License

Copyright (c) 2008-2012 www.myjeeva.com

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
-->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:util="http://www.springframework.org/schema/util"
	   xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-2.0.6.xsd  http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.5.xsd">

	<bean id="channelProcessingFilter" class="org.springframework.security.securechannel.ChannelProcessingFilter">
		<property name="channelDecisionManager" ref ="channelDecisionManager"></property>
		<property name="filterInvocationDefinitionSource"> 
			<value>
	  			CONVERT_URL_TO_LOWERCASE_BEFORE_COMPARISON
			  	\A/login.jsp\Z=REQUIRES_SECURE_CHANNEL
			  	\A.*/myaccount/.*\Z=REQUIRES_SECURE_CHANNEL
			  	\A.*/register/.*\Z=REQUIRES_SECURE_CHANNEL
			  	\A.*/images.*\Z=ANY_CHANNEL
			  	\A.*\Z=REQUIRES_INSECURE_CHANNEL
	    	</value>
		</property>
	</bean>

	<bean id="channelDecisionManager" class="org.springframework.security.securechannel.ChannelDecisionManagerImpl">
        <property name="channelProcessors">
            <list>
                <bean class="org.springframework.security.securechannel.SecureChannelProcessor">
                    <property name="entryPoint" ref="secureChannelEntryPoint"/>
                </bean>
                <bean class="org.springframework.security.securechannel.InsecureChannelProcessor">
                    <property name="entryPoint" ref="insecureChannelEntryPoint"/>
                </bean>
            </list>
        </property>
	</bean>
	
    <bean id="secureChannelEntryPoint" class="com.myjeeva.spring.security.securechannel.CrossDomainRetryWithHttpsEntryPoint">
        <property name="portMapper" ref="portMapper"/>
        <property name="crossDomainMapper" ref="crossDomainMapper"/>
    </bean>

    <bean id="insecureChannelEntryPoint" class="com.myjeeva.spring.security.securechannel.CrossDomainRetryWithHttpEntryPoint">
        <property name="portMapper" ref="portMapper"/>
        <property name="crossDomainMapper" ref="crossDomainMapper"/>
    </bean>

    <bean id="portMapper" class="org.springframework.security.util.PortMapperImpl">
        <property name="portMappings">
            <map>
            	<!-- by default spring channel processing supports port 80 & 443 mapping; however you can define it, no harm -->
                <entry key="80" value="443"/>
				<entry key="9001" value="9443"/>
			</map>
        </property>
    </bean>
    
    <bean id="crossDomainMapper" class="com.myjeeva.spring.security.util.CrossDomainMapperImpl">
        <property name="crossDomainMappings">
            <map>
            	<!-- For meaning full naming for sample web application
            		 I have mapped below names in hosts file to 127.0.0.1  -->
                <entry key="company.com" value="sso.company.com"/>
				<entry key="internal.samplesite.com" value="auth.internal.samplesite.com"/>
			</map>
        </property>
    </bean>
    
	<bean id="secureChannelProcessor" class="org.springframework.security.securechannel.SecureChannelProcessor"/>
	
	<bean id="insecureChannelProcessor" class="org.springframework.security.securechannel.InsecureChannelProcessor"/>
	
</beans>
